name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-3
      ECR_BACKEND: 122610518396.dkr.ecr.eu-west-3.amazonaws.com/backend
      ECR_FRONTEND: 122610518396.dkr.ecr.eu-west-3.amazonaws.com/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION |
            docker login --username AWS --password-stdin $ECR_BACKEND
          aws ecr get-login-password --region $AWS_REGION |
            docker login --username AWS --password-stdin $ECR_FRONTEND

      - name: Build and Push Backend Image
        working-directory: projet-aws-devops/backend
        run: |
          docker build -t backend:latest -f Dockerfile .
          docker tag backend:latest $ECR_BACKEND:latest
          docker push $ECR_BACKEND:latest

      - name: Build and Push Frontend Image
        working-directory: projet-aws-devops/frontend
        run: |
          docker build -t frontend:latest -f Dockerfile .
          docker tag frontend:latest $ECR_FRONTEND:latest
          docker push $ECR_FRONTEND:latest

      - name: Terraform Init and Apply
        working-directory: projet-aws-devops/infra
        run: |
          terraform init -input=false
          terraform apply -auto-approve \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}"